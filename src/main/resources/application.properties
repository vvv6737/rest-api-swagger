server.port=9999

spring.mvc.pathmatch.matching-strategy=ant_path_matcher

#jasypt
jasypt.encryptor.bean=jasyptStringEncryptor

# 데이터 소스
spring.datasource.url=ENC(VdNr7yG/X/Z1e1bYF8sBgnNWHvY6300uHTvRWtIuGDUvRIgveMdxeN/Z5clZ4CGM7PMqg5qDG9jL56GClC1CvdWM2cFJrk0RmqQRgY5kR5U=)

# Hikari
spring.datasource.hikari.driver-class-name=ENC(Sffk3hEigA7Zf9R8J07B51mIXO5O13BE9dsiRudyx+t75hmPQGAA7w==)
spring.datasource.hikari.username=ENC(TNRXAldVGA3ycNENwn9T6L79RmFm0qwH)
spring.datasource.hikari.password=ENC(nIFeLaVZXNgqxz/fPCcmHtrru/qln61Q)
spring.datasource.hikari.jdbc-url=ENC(zJmgNsMQ2ah1f+sAVPorZLZ7GPl4tn23Q641EdLXHDeW6kJmDsaEBXk+5UcOu3P+Mw1/s9oJ1XDKS8Gb7zCRIenUflhj4pofr5tDHBOD+ijY4PhEJR3B/PfCM4g9sEn9)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.connection-test-query=SELECT 1;

# 데이터 소스
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# 콘솔에 SQL 출력 여부
spring.jpa.show-sql=true

# mapper.xml 위치 지정.
mybatis.mapper-locations=mapper/*.xml

# 콘솔 창에 출력되는 로깅 메세지를 색으로 구분해서 출력
spring.output.ansi.enabled=always