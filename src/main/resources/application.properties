server.port=9999

spring.mvc.pathmatch.matching-strategy=ant_path_matcher

#jasypt
jasypt.encryptor.bean=jasyptStringEncryptor

# 데이터 소스
spring.datasource.url=ENC(VdNr7yG/X/Z1e1bYF8sBgnNWHvY6300uHTvRWtIuGDUvRIgveMdxeN/Z5clZ4CGM7PMqg5qDG9jL56GClC1CvdWM2cFJrk0RmqQRgY5kR5U=)

# 데이터 소스
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hikari
spring.datasource.hikari.driver-class-name=ENC(Sffk3hEigA7Zf9R8J07B51mIXO5O13BE9dsiRudyx+t75hmPQGAA7w==)
spring.datasource.hikari.username=ENC(TNRXAldVGA3ycNENwn9T6L79RmFm0qwH)
spring.datasource.hikari.password=ENC(nIFeLaVZXNgqxz/fPCcmHtrru/qln61Q)
spring.datasource.hikari.jdbc-url=ENC(zJmgNsMQ2ah1f+sAVPorZLZ7GPl4tn23Q641EdLXHDeW6kJmDsaEBXk+5UcOu3P+Mw1/s9oJ1XDKS8Gb7zCRIenUflhj4pofr5tDHBOD+ijY4PhEJR3B/PfCM4g9sEn9)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.connection-test-query=SELECT 1;

#spring security
spring.security.user.name=ENC(jOlTZUU8lkzNaTYGc51vIw==)
spring.security.user.password=ENC(PoWvoEWUzZUt4opq43Rg0g==)

# 콘솔에 SQL 출력 여부
spring.jpa.show-sql=true

# mapper.xml 위치 지정.
mybatis.mapper-locations=mapper/*.xml

# 콘솔 창에 출력되는 로깅 메세지를 색으로 구분해서 출력
spring.output.ansi.enabled=always

# mybatis logging 을 위한 설정 (driver 과 url 부분이 바뀌어있음을 확인해보자)
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.username=ENC(TNRXAldVGA3ycNENwn9T6L79RmFm0qwH)
spring.datasource.password=ENC(nIFeLaVZXNgqxz/fPCcmHtrru/qln61Q)

# 로그 관련 설정
logging.level.jdbc.sqlonly=off
logging.level.jdbc.sqltiming=info
logging.level.jdbc.resultsettable=info
logging.level.jdbc.audit=off
logging.level.jdbc.resultset=off
logging.level.jdbc.connection=off

jwt.secret: AAAABBBBCCCCDDDDEEEEFFFFGGGG123!@#

# 로그 설정 상세내용
# jdbc.sqlonly - SQL 문을 보여준다.
# jdbc.sqltiming - SQL 문과 이 SQL 문을 수행하는 시간(ms)을 같이 보여준다.
# jdbc.audit - ResultSet 을 제외한 모든 JDBC 호출 정보를 로그로 보여준다. 상당히 많은 양의 로그가 나오기 때문에 권장하지 않음.
# jdbc.resultset - ResultSet 을 포함한 모든 JDBC 호출 정보를 로그로 보여준다. audit 처럼 많은 로그가 나오기 때문에 권장하지 않음.
# jdbc.resultsettable - SQL 의 결과로 조회된 데이터를 table 형태로 로그를 보여준다.
# jdbc.connection - DB 연결, 연결 해제와 관련된 로그를 보여준다
# 속성값 내용
# ex) warn 으로 설정한 경우 이전 레벨인 debug, info 로그는 출력하지 않음.
# 따라서 개발하면서 계속 로그를 추적하고 싶은 경우 debug, info 로 설정하는 편을 권장.
# off - 사용하지 않음
# info - 정보성 로그
# warn - 경고성 로그
# error - 에러 로그
# fatal - 심각한 문제 로그